syntax = "proto3";

package com.github.dlshle.wflow;

option go_package = "github.com/dlshle/wflow/proto";

enum Status {
    OK = 0;
    INTERNAL = 1;
    INVALID = 2;
}

enum Type {
    PING = 0;
    PONG = 1;
    RESPONSE = 2;
    DISPATCH_JOB = 3; // from server only
    QUERY_JOB = 4; // from server only
    CANCEL_JOB = 5; // from server only
    QUERY_WORKER_STATUS = 6; // from server only
    DISCONNECT_WORKER = 7; // from server only
    JOB_UPDATE = 8; // client to server for job update(completion with result, failed with reason)
    CUSTOM = 100; // custom message for both server and worker
}

enum JobStatus {
    PENDING = 0;
    RUNNING = 1;
    SUCCESS = 2;
    FAILED = 3;
    CANCELLED = 4;
}

message Message {
    string id = 1; // uuid
    // string worker_id = 2;
    // string server_id = 3;
    map<string, string> header = 4;
    bytes payload = 5;
    Type type = 6;
    Status status = 7;
}

message Activity {
    string id = 1;
    string name = 2;
    optional string description = 3;
}

message Job {
    string id = 1;
    string activity_id = 2;
    bytes param = 3;
    int32 dispatch_time_in_seconds = 4;
}

message JobReport {
    Job job = 1;
    string worker_id = 2;
    bytes result = 3;
    int32 job_started_time_seconds = 4;
    JobStatus status = 5;
}

message Worker {
    string id = 1;
    SystemStat system_stat = 2;
    repeated string active_jobs = 3;
    optional string connected_server = 4;
    repeated Activity supported_activities = 5;
}

message Server {
    string id = 1;
    repeated string connected_workers = 2;
    int32 uptime_in_seconds = 3;
}

message SystemStat {
    int32 cpu_count = 2;
    int32 available_memory_in_bytes = 3;
    int32 total_memory_in_bytes = 4;
}